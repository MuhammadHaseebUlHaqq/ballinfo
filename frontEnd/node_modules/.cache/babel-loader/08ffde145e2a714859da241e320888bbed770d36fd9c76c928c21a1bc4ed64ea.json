{"ast":null,"code":"import { io } from 'socket.io-client';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.listeners = new Map();\n  }\n  connect() {\n    if (this.socket) return;\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const host = process.env.REACT_APP_API_URL || window.location.hostname;\n    const port = process.env.REACT_APP_API_PORT || '3000';\n    const wsUrl = `${protocol}//${host}:${port}`;\n    this.socket = io(wsUrl, {\n      reconnectionDelay: 1000,\n      reconnection: true,\n      reconnectionAttempts: 10,\n      transports: ['websocket', 'polling'],\n      timeout: 10000,\n      agent: false,\n      upgrade: true,\n      rejectUnauthorized: false\n    });\n    this.socket.on('connect', () => {\n      console.log('Connected to WebSocket server');\n    });\n    this.socket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      if (this.socket.io.opts.transports[0] === 'websocket') {\n        this.socket.io.opts.transports = ['polling'];\n      }\n    });\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from WebSocket server');\n    });\n    this.socket.on('error', error => {\n      console.error('Socket error:', error);\n    });\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n  subscribe(event, callback) {\n    if (!this.socket) this.connect();\n    this.socket.on(event, callback);\n    this.listeners.set(event, callback);\n  }\n  unsubscribe(event) {\n    if (!this.socket) return;\n    const callback = this.listeners.get(event);\n    if (callback) {\n      this.socket.off(event, callback);\n      this.listeners.delete(event);\n    }\n  }\n  subscribeToMatch(matchId) {\n    if (!this.socket) this.connect();\n    this.socket.emit('subscribe_match', matchId);\n  }\n  unsubscribeFromMatch(matchId) {\n    if (!this.socket) return;\n    this.socket.emit('unsubscribe_match', matchId);\n  }\n}\nexport default new SocketService();","map":{"version":3,"names":["io","SocketService","constructor","socket","listeners","Map","connect","protocol","window","location","host","process","env","REACT_APP_API_URL","hostname","port","REACT_APP_API_PORT","wsUrl","reconnectionDelay","reconnection","reconnectionAttempts","transports","timeout","agent","upgrade","rejectUnauthorized","on","console","log","error","opts","disconnect","subscribe","event","callback","set","unsubscribe","get","off","delete","subscribeToMatch","matchId","emit","unsubscribeFromMatch"],"sources":["E:/Muqtasid BS Computer Science/SPRING-25/Project/ballinfo/frontEnd/src/services/socketService.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nclass SocketService {\r\n    constructor() {\r\n        this.socket = null;\r\n        this.listeners = new Map();\r\n    }\r\n\r\n    connect() {\r\n        if (this.socket) return;\r\n\r\n        const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\r\n        const host = process.env.REACT_APP_API_URL || window.location.hostname;\r\n        const port = process.env.REACT_APP_API_PORT || '3000';\r\n        const wsUrl = `${protocol}//${host}:${port}`;\r\n\r\n        this.socket = io(wsUrl, {\r\n            reconnectionDelay: 1000,\r\n            reconnection: true,\r\n            reconnectionAttempts: 10,\r\n            transports: ['websocket', 'polling'],\r\n            timeout: 10000,\r\n            agent: false,\r\n            upgrade: true,\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        this.socket.on('connect', () => {\r\n            console.log('Connected to WebSocket server');\r\n        });\r\n\r\n        this.socket.on('connect_error', (error) => {\r\n            console.error('Connection error:', error);\r\n            if (this.socket.io.opts.transports[0] === 'websocket') {\r\n                this.socket.io.opts.transports = ['polling'];\r\n            }\r\n        });\r\n\r\n        this.socket.on('disconnect', () => {\r\n            console.log('Disconnected from WebSocket server');\r\n        });\r\n\r\n        this.socket.on('error', (error) => {\r\n            console.error('Socket error:', error);\r\n        });\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.socket) {\r\n            this.socket.disconnect();\r\n            this.socket = null;\r\n        }\r\n    }\r\n\r\n    subscribe(event, callback) {\r\n        if (!this.socket) this.connect();\r\n\r\n        this.socket.on(event, callback);\r\n        this.listeners.set(event, callback);\r\n    }\r\n\r\n    unsubscribe(event) {\r\n        if (!this.socket) return;\r\n\r\n        const callback = this.listeners.get(event);\r\n        if (callback) {\r\n            this.socket.off(event, callback);\r\n            this.listeners.delete(event);\r\n        }\r\n    }\r\n\r\n    subscribeToMatch(matchId) {\r\n        if (!this.socket) this.connect();\r\n        this.socket.emit('subscribe_match', matchId);\r\n    }\r\n\r\n    unsubscribeFromMatch(matchId) {\r\n        if (!this.socket) return;\r\n        this.socket.emit('unsubscribe_match', matchId);\r\n    }\r\n}\r\n\r\nexport default new SocketService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}