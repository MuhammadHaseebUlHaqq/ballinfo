{"ast":null,"code":"import React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import{useAuth}from'../context/AuthContext';import'../styles/Auth.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();const{login}=useAuth();const[formData,setFormData]=useState({username:'',password:''});const[errors,setErrors]=useState({});const[isLoading,setIsLoading]=useState(false);const[successMessage,setSuccessMessage]=useState('');const validateForm=()=>{const newErrors={};if(!formData.username.trim()){newErrors.username='Username is required';}if(!formData.password){newErrors.password='Password is required';}return newErrors;};const handleChange=e=>{const{name,value}=e.target;setFormData(prev=>({...prev,[name]:value}));// Clear all errors when user starts typing\nsetErrors({});};const handleSubmit=async e=>{e.preventDefault();const newErrors=validateForm();if(Object.keys(newErrors).length===0){setIsLoading(true);setErrors({});// Clear any previous errors\nsetSuccessMessage('');// Clear any previous success message\ntry{const response=await fetch('http://localhost:3000/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const data=await response.json();if(data.success){setSuccessMessage('Login successful! Redirecting to homepage...');setErrors({});// Ensure no errors are shown with success message\nlogin(data.data);// Store user data in context\nsetTimeout(()=>{navigate('/');},2000);}else{setSuccessMessage('');// Clear any success message\nsetErrors({submit:data.message});}}catch(error){setSuccessMessage('');// Clear any success message\nsetErrors({submit:'An error occurred. Please try again.'});}finally{setIsLoading(false);}}else{setErrors(newErrors);setSuccessMessage('');// Clear any success message\n}};return/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome Back\"}),successMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:successMessage}),errors.submit&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message submit-error\",children:errors.submit}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"auth-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:formData.username,onChange:handleChange,placeholder:\"Username\",className:errors.username?'error':'',disabled:isLoading}),errors.username&&/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:errors.username})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,placeholder:\"Password\",className:errors.password?'error':'',disabled:isLoading}),errors.password&&/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:errors.password})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"auth-button\",disabled:isLoading,children:isLoading?'Logging in...':'Log In'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-footer\",children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\"Sign Up\"})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","Link","useNavigate","useAuth","jsx","_jsx","jsxs","_jsxs","Login","navigate","login","formData","setFormData","username","password","errors","setErrors","isLoading","setIsLoading","successMessage","setSuccessMessage","validateForm","newErrors","trim","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","data","json","success","setTimeout","submit","message","error","className","children","onSubmit","type","onChange","placeholder","disabled","to"],"sources":["E:/Muqtasid BS Computer Science/SPRING-25/Project/ballinfo/frontEnd/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/Auth.css';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.username.trim()) {\n      newErrors.username = 'Username is required';\n    }\n    \n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    }\n    \n    return newErrors;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear all errors when user starts typing\n    setErrors({});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = validateForm();\n    \n    if (Object.keys(newErrors).length === 0) {\n      setIsLoading(true);\n      setErrors({}); // Clear any previous errors\n      setSuccessMessage(''); // Clear any previous success message\n      \n      try {\n        const response = await fetch('http://localhost:3000/api/auth/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(formData)\n        });\n\n        const data = await response.json();\n\n        if (data.success) {\n          setSuccessMessage('Login successful! Redirecting to homepage...');\n          setErrors({}); // Ensure no errors are shown with success message\n          login(data.data); // Store user data in context\n          setTimeout(() => {\n            navigate('/');\n          }, 2000);\n        } else {\n          setSuccessMessage(''); // Clear any success message\n          setErrors({ submit: data.message });\n        }\n      } catch (error) {\n        setSuccessMessage(''); // Clear any success message\n        setErrors({ submit: 'An error occurred. Please try again.' });\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      setErrors(newErrors);\n      setSuccessMessage(''); // Clear any success message\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-card\">\n        <h2>Welcome Back</h2>\n        {successMessage && (\n          <div className=\"success-message\">\n            {successMessage}\n          </div>\n        )}\n        {errors.submit && (\n          <div className=\"error-message submit-error\">\n            {errors.submit}\n          </div>\n        )}\n        <form onSubmit={handleSubmit} className=\"auth-form\">\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n              placeholder=\"Username\"\n              className={errors.username ? 'error' : ''}\n              disabled={isLoading}\n            />\n            {errors.username && <span className=\"error-message\">{errors.username}</span>}\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              placeholder=\"Password\"\n              className={errors.password ? 'error' : ''}\n              disabled={isLoading}\n            />\n            {errors.password && <span className=\"error-message\">{errors.password}</span>}\n          </div>\n\n          <button \n            type=\"submit\" \n            className=\"auth-button\"\n            disabled={isLoading}\n          >\n            {isLoading ? 'Logging in...' : 'Log In'}\n          </button>\n        </form>\n        \n        <div className=\"auth-footer\">\n          Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}